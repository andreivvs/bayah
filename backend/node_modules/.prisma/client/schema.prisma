generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  telegramId String  @unique
  name       String
  email      String?
  phone      String?
  role       String // owner, admin

  shares   Share[]
  bookings Booking[] @relation("UserBookings")
}

model Property {
  id             Int    @id @default(autoincrement())
  title          String
  location       String
  rooms          Int
  area           Float
  managerContact String
  mapUrl         String

  shares        Share[]
  calendarSlots CalendarSlot[]
  GalleryImage  GalleryImage[]
}

model GalleryImage {
  id         Int      @id @default(autoincrement())
  url        String
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int
}

model Share {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int
  fraction   String

  bookings  Booking[]
  swapsFrom Swap[]    @relation("SwapFrom")
  swapsTo   Swap[]    @relation("SwapTo")
}

model Booking {
  id      Int          @id @default(autoincrement())
  share   Share        @relation(fields: [shareId], references: [id])
  shareId Int
  slot    CalendarSlot @relation(fields: [slotId], references: [id])
  slotId  Int
  status  String
  comment String?

  user   User? @relation("UserBookings", fields: [userId], references: [id])
  userId Int?
}

model Swap {
  id          Int      @id @default(autoincrement())
  fromShare   Share    @relation("SwapFrom", fields: [fromShareId], references: [id])
  fromShareId Int
  toShare     Share    @relation("SwapTo", fields: [toShareId], references: [id])
  toShareId   Int
  week        DateTime
  status      String
  message     String?
}

model CalendarSlot {
  id          Int       @id @default(autoincrement())
  property    Property  @relation(fields: [propertyId], references: [id])
  propertyId  Int
  weekStart   DateTime
  weekEnd     DateTime
  isPriority  Boolean
  isAvailable Boolean
  bookings    Booking[]
}
